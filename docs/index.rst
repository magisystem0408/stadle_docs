
Welcome to the STADLE 2.0 documentation!
========================================

STADLE 2.0's documentation is divided into several sections on the left sidebar.

If you're unable to find what you're looking for, please let us know! Further information on STADLE and it's features can be found on our website http://www.tie-set.com

If this is your first time here, you may want to start with the Introduction section below.


Introduction
------------
Our STADLE platform is a paradigm-shifting technology for adaptive and continuous learning combining privacy-preserving Machine Learning (ML) and decentralized system capability to provide scalable, versatile, and secure AI services. STADLE stands for Scalable & Traceable AI platform for Distributed LEarning.

Federated Learning (FL) solves the problems of privacy and communication load, which commonly appear in ML systems. FL does not require users to upload raw data to cloud servers.

- **Privacy**: FL improves the privacy-preserving aspect of AI systems by not collecting data in the cloud while producing collective intelligence based on uploaded user ML models.
- **Communication load**: The amount of traffic generated by FL dramatically decreases from classical AI systems due to the difference in data type exchanged.

Our STADLE platform enhances the capability of FL by incorporating decentralized architecture.

- **Scalability**: Decentralized FL servers in STADLE realizes the load-balancing to accommodate more users.
- **5G-friendliness**: The delay in communication to obtain collective intelligence can be dramatically reduced by employing decentralized FL servers located at edge servers.
- **Traceability**: Our platform has the performance tracking capability that monitors and manages the transition of collective intelligence models in the decentralized system.

Quickstart
----------
Get started in 10 minutes  or take a tour of the library. https://stadle-documentation.readthedocs.io/en/latest/index.html

Documentation
-------------
For additional guides, examples, and APIâ€™s see the documentation. https://stadle-documentation.readthedocs.io/en/latest/index.html

Want to help?
-------------
Want to file a bug, contribute some code, or improve documentation? Excellent! Read up on our guidelines for contributing, then check out issues that are labeled Good First Issue. https://stadle-documentation.readthedocs.io/en/latest/index.html

Contents:

* :ref:`Overview <overview>`
* :ref:`Installation <installation>`
* :ref:`Usage <usage>`
* :ref:`Documentation <documentation>`
* :ref:`Contributing <contributing>`
* :ref:`License <license>`

Table of Contents:

.. _overview:

.. toctree::
   :maxdepth: 3

   overview
   installation
   usage
   documentation
   contributing
   license

.. _installation:

.. toctree::
   :maxdepth: 3

   production/index

.. _usage:

.. toctree::
   :maxdepth: 3

   development/index

.. _documentation:

.. toctree::
   :maxdepth: 3

   tutorials/index

.. _contributing:

.. toctree::
   :maxdepth: 3

   git/index

.. _license:

.. toctree::
   :maxdepth: 3

   contributing/index

   Index <https://stadle-documentation.readthedocs.io/en/latest/>


Install from Source
-------------------

We only support installing from the source as we keep the software a private content.

Linux/Ubuntu Users
------------------

Please follow the installation steps for `server`, `agent` and `database`.

Install Pre-requisites
----------------------

We need `sqlite3` drivers and dev packages. 

```bash
sudo apt-get update -y  && apt-get upgrade -y
sudo apt-get install -y python3 python3-dev python3-venv python3-pip \
git build-essential vim libncurses5-dev \
libncursesw5-dev sqlite3 libsqlite3-dev
```

Create Virtual Environment
--------------------------

```bash
python3 -m venv ENVSTADLE
source ENVSTADLE/bin/activate
```

Build Package
-------------

First upgrade pip, 

```bash
pip install --upgrade pip
```

Then build the wheel,

```bash
python setup.py bdist_wheel
```

Install Wheel
-------------

```bash
python3 -m pip install dist/stadle-*-py3-none-any.whl \
            --extra-index-url https://test.pypi.org/simple \
            --no-cache-dir
```

MacOS Users
-----------

Please follow the installation steps for `server`, `agent` and `database`.

Create Virtual Environment
--------------------------

```bash
python3 -m venv ENVSTADLE
source ENVSTADLE/bin/activate
```

Build Package
-------------

First upgrade pip, 

```bash
pip install --upgrade pip
```

Then build the wheel,

```bash
python setup.py bdist_wheel
```

Install Wheel
-------------

```bash
python3 -m pip install dist/stadle-*-py3-none-any.whl \
            --extra-index-url https://test.pypi.org/simple \
            --no-cache-dir
```

Developers
-----------

When developing STADLE, make sure to install the STADLE in develop mode. 
This mode allows the developers to observe the changes made to the codes without
installing STADLE each time an update is made to the source.

To do debug the application, use the following command. 

```bash
python3 setup.py develop
```

Additionally, to include tests, install as follows. 

```bash
pip install -e .[dev]
```

Run the test cases,

```bash
pytest test/
```

Note: If you are using the STADLE outside the source folder, make sure you `copy`
the `setups` and `prototypes` folders to your workspace to test things out. 

Usage
-----

The simplest form of STADLE example is the [minimal example](#minimal-example).
For a practical example, check out the [image classification](#image-classification-application). 

Minimal Example
---------------

This sample does not have actual training. This could be used as a template for user implementation of ML Engine.

1. [PyTorch Minimal Example](prototypes/sample/minimal_pt/README.md)
2. [Tensorflow Minimal Example](prototypes/sample/minimal_tf/README.md)

[Image Classification Application](prototypes/sample/image_classification/README.md)
------------------------------------------------------------------------------------

This sample provides a simple example of STADLE integration with "actual" ML training. 
Please go to [the prototype directory](prototypes/image_classification) for more details.


Documentation
-------------

![Architecture](docs/_src/_static/architecture_ver0-5.png)

- [STADLE component specification ](docs/_src/specs.md)
- [STADLE communication protocols](docs/_src/protocols.md)
- [STADLE code documentation](https://tie-set.github.io/stadle_dev/)


Contributing
------------

Reach out with your issues or proposals to improve STADLE. 

Bug Reports
------------


Please check/submit issues [here](https://github.com/tie-set/ts_afl/issues).

Tech Support
-------------

Please reach out to our technical support team via [support@tie-set.com](support@tie-set.com).

License
--------


Any use and distribution of this code must be under the NDA with [TieSet Inc.](https://tie-set.com/)








